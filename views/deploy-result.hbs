<h2>Deploy Twinkle</h2>
<div id="updates"></div>
<img src="/images/loading.gif" height="40" width="40" id="loading-sign" alt="loading">

<style>
    #updates {
        font-family: monospace;
        margin-bottom: 10px;
    }
</style>

<script>
    let source = new EventSource('/deploy/stream?code={{code}}&state={{state}}');
    let updatesPre = document.getElementById('updates')

    source.onopen = function () {
        console.log('Connected to stream');
    }
    source.onmessage = function (msg) {
        let text = atob(msg.data);
        if (text === 'end:success') {
            updateStatus('<span style="font-weight: bold; color: green">Twinkle deployment completed successfully :)</span>');
            finish();
        } else if (text === 'end:failure') {
			updateStatus(error('Deployment unsuccessful :(') +
                    `<br> Please see the error message above.`);
			finish();
        } else {
			text = text.replace(/\n/g, '<br>');
			// This becomes an XSS vector only if the deploy script prints malicious JS
            updatesPre.innerHTML += text + '<br>';
        }
    }
    source.onerror = function (err) {
        finish();
		updateStatus(error('Something bad happened :(') +
                `<br> Please check the wiki to see if deployment was successful or try again.`);
        console.error(err);
    }
	function updateStatus(html) {
        const div = document.createElement('div');
		div.innerHTML = html;
        updatesPre.insertAdjacentElement('afterend', div);
    }
    function error(msg) {
        return `<span style="color: red; font-weight: bold">${msg}</span>`;
    }
    function finish() {
        document.getElementById('loading-sign').remove();
        source.close();
    }
</script>
